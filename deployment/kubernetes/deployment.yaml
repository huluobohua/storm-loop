apiVersion: apps/v1
kind: Deployment
metadata:
  name: storm-app
  namespace: storm-production
  labels:
    app: storm
    component: app
spec:
  replicas: 3
  selector:
    matchLabels:
      app: storm
      component: app
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  template:
    metadata:
      labels:
        app: storm
        component: app
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "9090"
        prometheus.io/path: "/metrics"
    spec:
      serviceAccountName: storm-service-account
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        fsGroup: 1000
      containers:
      - name: storm-app
        image: storm-loop:latest
        imagePullPolicy: Always
        ports:
        - containerPort: 8501
          name: http
          protocol: TCP
        - containerPort: 9090
          name: metrics
          protocol: TCP
        envFrom:
        - configMapRef:
            name: storm-config
        - secretRef:
            name: storm-secrets
        - secretRef:
            name: storm-external-services
        resources:
          requests:
            cpu: 500m
            memory: 1Gi
          limits:
            cpu: 2000m
            memory: 4Gi
        livenessProbe:
          httpGet:
            path: /_stcore/health
            port: 8501
          initialDelaySeconds: 30
          periodSeconds: 30
          timeoutSeconds: 10
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /_stcore/health
            port: 8501
          initialDelaySeconds: 20
          periodSeconds: 10
          timeoutSeconds: 5
          successThreshold: 1
          failureThreshold: 3
        volumeMounts:
        - name: data
          mountPath: /app/data
        - name: cache
          mountPath: /app/cache
        - name: logs
          mountPath: /app/logs
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: false
          capabilities:
            drop:
            - ALL
      volumes:
      - name: data
        persistentVolumeClaim:
          claimName: storm-data-pvc
      - name: cache
        emptyDir:
          sizeLimit: 5Gi
      - name: logs
        emptyDir:
          sizeLimit: 2Gi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: storm-celery-worker
  namespace: storm-production
  labels:
    app: storm
    component: celery-worker
spec:
  replicas: 2
  selector:
    matchLabels:
      app: storm
      component: celery-worker
  template:
    metadata:
      labels:
        app: storm
        component: celery-worker
    spec:
      serviceAccountName: storm-service-account
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        fsGroup: 1000
      containers:
      - name: celery-worker
        image: storm-loop:latest
        imagePullPolicy: Always
        command: ["celery", "-A", "storm_celery", "worker", "--loglevel=info", "--concurrency=4"]
        envFrom:
        - configMapRef:
            name: storm-config
        - secretRef:
            name: storm-secrets
        resources:
          requests:
            cpu: 1000m
            memory: 2Gi
          limits:
            cpu: 2000m
            memory: 4Gi
        volumeMounts:
        - name: data
          mountPath: /app/data
        - name: logs
          mountPath: /app/logs
      volumes:
      - name: data
        persistentVolumeClaim:
          claimName: storm-data-pvc
      - name: logs
        emptyDir:
          sizeLimit: 2Gi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: storm-celery-beat
  namespace: storm-production
  labels:
    app: storm
    component: celery-beat
spec:
  replicas: 1
  selector:
    matchLabels:
      app: storm
      component: celery-beat
  template:
    metadata:
      labels:
        app: storm
        component: celery-beat
    spec:
      serviceAccountName: storm-service-account
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        fsGroup: 1000
      containers:
      - name: celery-beat
        image: storm-loop:latest
        imagePullPolicy: Always
        command: ["celery", "-A", "storm_celery", "beat", "--loglevel=info"]
        envFrom:
        - configMapRef:
            name: storm-config
        - secretRef:
            name: storm-secrets
        resources:
          requests:
            cpu: 100m
            memory: 256Mi
          limits:
            cpu: 500m
            memory: 512Mi