# Example Terraform variables file
# Copy this to terraform.tfvars and update with your values
#
# SECURITY WARNING: Never commit API keys to version control!
# Provide sensitive values via environment variables:
# export TF_VAR_anthropic_api_key="your-key-here"
# export TF_VAR_openai_api_key="your-key-here"
# export TF_VAR_google_api_key="your-key-here"
# export TF_VAR_perplexity_api_key="your-key-here"

# AWS Configuration
aws_region     = "us-west-2"
aws_account_id = "123456789012"

# Project Configuration
project_name  = "storm"
environment   = "production"
project_owner = "your-team@example.com"

# Network Configuration
vpc_cidr = "10.0.0.0/16"
azs      = ["us-west-2a", "us-west-2b", "us-west-2c"]

# EKS Configuration
eks_cluster_version = "1.28"
eks_node_groups = {
  general = {
    min_size     = 2
    max_size     = 10
    desired_size = 3
    instance_types = ["t3.large"]
    disk_size    = 100
  }
}

# RDS Configuration
rds_instance_class     = "db.r6g.large"
rds_allocated_storage  = 100
rds_engine_version     = "15.4"
rds_multi_az          = true
rds_backup_retention  = 30

# ElastiCache Configuration
elasticache_node_type         = "cache.r6g.large"
elasticache_num_cache_nodes   = 3
elasticache_engine_version    = "7.0"

# Domain Configuration
domain_name = "storm.example.com"

# Monitoring Configuration
enable_monitoring = true
enable_logging   = true
log_retention_days = 30

# Security Configuration
enable_waf = true
enable_guardduty = true
enable_security_hub = true

# Backup Configuration
backup_retention_days = 30
enable_point_in_time_recovery = true

# Cost Optimization
enable_spot_instances = false
enable_auto_scaling = true

# Tags
additional_tags = {
  CostCenter = "engineering"
  Compliance = "soc2"
}

# API Keys (REQUIRED - provide via environment variables, never commit to VCS)
# These should be provided via environment variables:
# export TF_VAR_anthropic_api_key="your-actual-key"
anthropic_api_key = ""
openai_api_key = ""
google_api_key = ""
perplexity_api_key = ""
