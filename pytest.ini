[tool:pytest]
# Pytest configuration for academic validation framework

# Test discovery
testpaths = tests
python_files = test_*.py
python_classes = Test*
python_functions = test_*

# Markers for academic validation
markers =
    academic_validation: Academic research validation tests
    performance: Performance and scalability tests  
    integration: Database and API integration tests
    slow: Tests that take more than 30 seconds
    multi_agent: Multi-agent system tests
    citation_analysis: Citation network analysis tests
    bias_detection: Research bias detection tests
    cross_disciplinary: Cross-disciplinary research tests
    longitudinal: Longitudinal validation tests
    expert_review: Expert validation tests
    benchmark: Benchmark tests against academic standards

# Output and reporting
addopts = 
    --strict-markers
    --strict-config
    --verbose
    --tb=short
    --cov=knowledge_storm
    --cov-report=term-missing
    --cov-report=html:htmlcov
    --cov-report=xml
    --cov-fail-under=80
    --junitxml=test-results.xml
    --html=test-report.html
    --self-contained-html

# Async test support
asyncio_mode = auto

# Test timeout (in seconds)
timeout = 300
timeout_method = thread

# Parallel execution
# Use with: pytest -n auto
filterwarnings =
    ignore::UserWarning
    ignore::DeprecationWarning
    ignore::PendingDeprecationWarning

# Minimum Python version
minversion = 3.9

# Log configuration
log_cli = true
log_cli_level = INFO
log_cli_format = %(asctime)s [%(levelname)8s] %(name)s: %(message)s
log_cli_date_format = %Y-%m-%d %H:%M:%S

log_file = tests.log
log_file_level = DEBUG
log_file_format = %(asctime)s [%(levelname)8s] %(filename)s:%(lineno)d %(funcName)s(): %(message)s
log_file_date_format = %Y-%m-%d %H:%M:%S

# Academic validation specific settings
academic_validation_thresholds = {
    "citation_accuracy": 0.95,
    "research_quality": 0.80,
    "expert_consensus": 0.80,
    "bias_detection": 0.85,
    "coverage_completeness": 0.80
}

performance_thresholds = {
    "max_response_time": 30.0,
    "max_memory_usage_mb": 2048,
    "min_success_rate": 0.95,
    "max_concurrent_users": 50
}

# Test environment variables
env =
    TESTING=true
    LOG_LEVEL=DEBUG
    PYTEST_CURRENT_TEST=true