[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "storm-loop"
version = "0.1.0"
description = "Enhanced Academic Knowledge Curation System"
readme = "README.md"
requires-python = ">=3.9"
license = {text = "MIT"}
authors = [
    {name = "STORM-Loop Team", email = "storm-loop@example.com"}
]
keywords = ["knowledge", "curation", "academic", "research", "AI"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Researchers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
]
dependencies = [
    "knowledge-storm>=1.1.0",
    "requests>=2.31.0",
    "aiohttp>=3.8.5",
    "redis>=4.6.0",
    "fastapi>=0.100.0",
    "uvicorn[standard]>=0.22.0",
    "pydantic>=2.0.0",
    "loguru>=0.7.0",
    "python-dotenv>=1.0.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.4.0",
    "pytest-asyncio>=0.21.0",
    "pytest-mock>=3.11.0",
    "black>=23.7.0",
    "flake8>=6.0.0",
    "mypy>=1.4.0",
    "pre-commit>=3.3.0",
    "coverage>=7.2.0",
]
academic = [
    "crossref-commons>=0.0.7",
    "pyalex>=0.13",
    "spacy>=3.6.1",
    "transformers>=4.30.0",
    "nltk>=3.8.1",
    "bibtexparser>=1.4.0",
    "citeproc-py>=0.6.0",
]
all = [
    "storm-loop[dev,academic]"
]

[project.urls]
"Homepage" = "https://github.com/huluobohua/storm-loop"
"Bug Reports" = "https://github.com/huluobohua/storm-loop/issues"
"Source" = "https://github.com/huluobohua/storm-loop"

[tool.black]
line-length = 88
target-version = ['py39']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
line_length = 88
multi_line_output = 3

[tool.flake8]
max-line-length = 88
extend-ignore = ["E203", "W503"]
exclude = [".git", "__pycache__", "build", "dist", ".tox", ".venv"]

[tool.mypy]
python_version = "3.9"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
ignore_missing_imports = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = "test_*.py"
python_classes = "Test*"
python_functions = "test_*"
addopts = "-v --tb=short --strict-markers"
markers = [
    "unit: Unit tests",
    "integration: Integration tests",
    "api: API tests",
    "slow: Slow running tests",
]

[tool.coverage.run]
source = ["storm_loop"]
omit = ["tests/*", "*/migrations/*"]

[tool.coverage.report]
show_missing = true
skip_covered = false
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
]